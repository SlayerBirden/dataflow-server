<?php

/**
 * This file is generated by SlayerBirden\DFCodeGeneration
 */

declare(strict_types=1);

namespace SlayerBirden\DataFlowServer\TypeCsvReader\Factory;

use Interop\Container\ContainerInterface;
use SlayerBirden\DataFlowServer\Doctrine\Hydrator\Strategy\CollectionStrategy;
use SlayerBirden\DataFlowServer\Doctrine\Hydrator\Strategy\ExtractionNestedEntityStrategy;
use Zend\Hydrator\ClassMethods;
use Zend\Hydrator\HydratorInterface;
use Zend\ServiceManager\Factory\FactoryInterface;

final class CsvReaderHydratorFactory implements FactoryInterface
{
    public function __invoke(ContainerInterface $container, $requestedName, array $options = null): HydratorInterface
    {
        $hydrator = new ClassMethods();
        //TODO check internal strategy (may not be ClassMethods)
        $hydrator->addStrategy('owner', new ExtractionNestedEntityStrategy(new ClassMethods()));
        //TODO check that CollectionStrategy is needed
        $hydrator->addStrategy('pipes', new CollectionStrategy(new ClassMethods(), \SlayerBirden\DataFlowServer\Pipeline\Entities\Pipe::class));
        //TODO check that CollectionStrategy is needed
        $hydrator->addStrategy('columns', new CollectionStrategy(new ClassMethods(), \SlayerBirden\DataFlowServer\CsvColumn\Entities\CsvColumn::class));

        //TODO add any custom strategies here if needed (like Obscured)

        return $hydrator;
    }
}
