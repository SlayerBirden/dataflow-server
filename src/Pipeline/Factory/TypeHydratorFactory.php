<?php

/**
 * This file is generated by SlayerBirden\DFCodeGeneration
 */

declare(strict_types=1);

namespace SlayerBirden\DataFlowServer\Pipeline\Factory;

use Interop\Container\ContainerInterface;
use SlayerBirden\DataFlowServer\Pipeline\Entities\Type;
use Zend\Hydrator\HydratorInterface;
use Zend\ServiceManager\Factory\FactoryInterface;

final class TypeHydratorFactory implements FactoryInterface
{
    public function __invoke(ContainerInterface $container, $requestedName, array $options = null): HydratorInterface
    {
        $config = new \GeneratedHydrator\Configuration(Type::class);
        $hydratorClass = $config->createFactory()->getHydratorClass();

        return new $hydratorClass();
    }
}
