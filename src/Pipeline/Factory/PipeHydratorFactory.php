<?php

/**
 * This file is generated by SlayerBirden\DFCodeGeneration
 */

declare(strict_types=1);

namespace SlayerBirden\DataFlowServer\Pipeline\Factory;

use Interop\Container\ContainerInterface;
use SlayerBirden\DataFlowServer\Doctrine\Hydrator\Strategy\ExtractionNestedEntityStrategy;
use SlayerBirden\DataFlowServer\Doctrine\Hydrator\Strategy\FullNestedEntityStrategy;
use SlayerBirden\DataFlowServer\Doctrine\Persistence\EntityManagerRegistry;
use SlayerBirden\DataFlowServer\Pipeline\Entities\Type;
use Zend\Hydrator\ClassMethods;
use Zend\Hydrator\HydratorInterface;
use Zend\Hydrator\NamingStrategy\MapNamingStrategy;
use Zend\Hydrator\Strategy\DateTimeFormatterStrategy;
use Zend\ServiceManager\Factory\FactoryInterface;

final class PipeHydratorFactory implements FactoryInterface
{
    public function __invoke(ContainerInterface $container, $requestedName, array $options = null): HydratorInterface
    {
        $hydrator = new ClassMethods();
        $hydrator->addStrategy('owner', new ExtractionNestedEntityStrategy(new ClassMethods()));
        $hydrator->addStrategy('type', new FullNestedEntityStrategy(
            new ClassMethods(),
            $container->get(EntityManagerRegistry::class),
            Type::class
        ));
        $hydrator->addStrategy('created_at', new DateTimeFormatterStrategy());
        $hydrator->addStrategy('updated_at', new DateTimeFormatterStrategy());

        $hydrator->setNamingStrategy(new MapNamingStrategy([
            'created_at' => 'createdAt',
            'updated_at' => 'updatedAt',
        ], [
            'createdAt' => 'created_at',
            'updatedAt' => 'updated_at',
        ]));

        return $hydrator;
    }
}
