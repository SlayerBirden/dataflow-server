<?php

/**
 * This file is generated by SlayerBirden\DFCodeGeneration
 */

declare(strict_types=1);

namespace codecept\pipeline\type;

use Codeception\Util\HttpCode;
use SlayerBirden\DataFlowServer\Pipeline\Entities\Type;
use codecept\ApiTester;

class AddCest
{
    public function addType(ApiTester $I): void
    {
        $I->wantTo('successfully create type');
        $I->haveHttpHeader('Content-Type', 'application/json');
        $I->sendPOST('/type', [
            'code' => 'distinctio',
            'tablename' => 'amet',
        ]);
        $I->seeResponseCodeIs(HttpCode::OK);
        $I->seeResponseContainsJson([
            'data' => [
                'type' => [
                    'code' => 'distinctio',
                    'tablename' => 'amet',
                ],
            ],
        ]);
    }

    public function addIncompleteType(ApiTester $I): void
    {
        $I->wantTo('attempt to create incomplete type');
        $I->haveHttpHeader('Content-Type', 'application/json');
        $I->sendPOST('/type', [
            'code' => 'Et saepe cum dolor aperiam molestias.',
        ]);
        $I->seeResponseCodeIs(HttpCode::BAD_REQUEST);
    }

    public function addInvalidType(ApiTester $I): void
    {
        $I->wantTo('attempt to create invalid type');
        $I->haveHttpHeader('Content-Type', 'application/json');
        $I->sendPOST('/type', [
            'code' => 'Similique et aut accusantium mollitia vel. Sit iusto explicabo doloremque illo sed ut. Eum qui mollitia eum sit iste. Et quaerat fuga ut ipsum voluptatem. Voluptatem dolores recusandae eos ut. Et architecto voluptas illo voluptas nobis vel. Magnam ex dolore doloribus veritatis. Quasi voluptatem dignissimos eos voluptatem. Ut aut rem rerum magnam quia iste quia. Veniam veniam fugit ut molestias.',
            'tablename' => 'Labore iste dolore suscipit expedita. Cumque itaque explicabo recusandae ut mollitia. Nesciunt voluptas eveniet cum beatae facilis. Nihil et qui laborum aut a. Esse velit alias iste dolorum nihil soluta. Expedita voluptates labore repellendus architecto quidem aspernatur molestias. Quia voluptas iure quis est laudantium. Error et adipisci debitis minus quia repudiandae dolore. Voluptatem eos culpa necessitatibus magni dolorem et unde nisi.',
        ]);
        $I->seeResponseCodeIs(HttpCode::BAD_REQUEST);
    }

    public function mutateExistingType(ApiTester $I): void
    {
        $I->wantTo('attempt to mutate existing record by providing ID');
        $I->haveHttpHeader('Content-Type', 'application/json');
        $I->sendPOST('/type', [
            'code' => 'distinctio',
            'tablename' => 'amet',
        ]);

        $I->sendPOST('/type', [
            'code' => 'distinctio',
            'tablename' => 'amet2',
        ]);

        /** @var Type $entity */
        $entity = $I->grabEntityFromRepository(Type::class, [
            'code' => 'distinctio',
        ]);

        $I->assertSame('amet', $entity->getTableName());
    }
}
