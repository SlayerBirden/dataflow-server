<?php

/**
 * This file is generated by SlayerBirden\DFCodeGeneration
 */

declare(strict_types=1);

namespace codecept\pipeline\type;

use Codeception\Util\HttpCode;
use SlayerBirden\DataFlowServer\Pipeline\Entities\Type;
use codecept\ApiTester;

class UpdateCest
{
    public function _before(ApiTester $I): void
    {
        $I->haveInRepository(Type::class, [
            'code' => 'vel',
            'tablename' => 'eveniet',
        ]);
    }

    public function updateType(ApiTester $I): void
    {
        $I->wantTo('successfully update type vel');
        $I->haveHttpHeader('Content-Type', 'application/json');
        $I->sendPUT('/type/vel', [
            'tablename' => 'qui',
        ]);
        $I->seeResponseCodeIs(HttpCode::OK);
        $I->seeResponseContainsJson([
            'data' => [
                'type' => [
                    'code' => 'vel',
                    'tablename' => 'qui',
                ],
            ],
        ]);
    }

    public function updateNonExistingType(ApiTester $I): void
    {
        $I->wantTo('update non-existing type');
        $I->haveHttpHeader('Content-Type', 'application/json');
        $I->sendPUT('/type/baz', []);
        $I->seeResponseCodeIs(HttpCode::NOT_FOUND);
        $I->seeResponseContainsJson([
            'data' => [
                'type' => null
            ]
        ]);
    }
}
