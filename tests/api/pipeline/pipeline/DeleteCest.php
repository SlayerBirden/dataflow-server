<?php

/**
 * This file is generated by SlayerBirden\DFCodeGeneration
 */

declare(strict_types=1);

namespace codecept\pipeline\pipeline;

use Codeception\Util\HttpCode;
use SlayerBirden\DataFlowServer\Domain\Entities\User;
use SlayerBirden\DataFlowServer\Pipeline\Entities\Pipeline;
use codecept\ApiTester;

class DeleteCest
{
    public function _before(ApiTester $I): void
    {
        $user = $I->grabEntityFromRepository(User::class, ['id' => 1]);
        $I->haveInRepository(Pipeline::class, [
            'name' => 'rerum',
            'createdAt' => new \DateTime('1997-09-17T01:58:07+00:00'),
            'updatedAt' => new \DateTime('2003-12-26T13:44:54+00:00'),
            'owner' => $user,
        ]);
    }

    public function deletePipeline(ApiTester $I): void
    {
        $I->wantTo('delete pipeline with id 1');
        $I->haveHttpHeader('Content-Type', 'application/json');
        $I->sendDELETE('/pipeline/1');
        $I->seeResponseCodeIs(HttpCode::OK);
        $I->seeResponseContainsJson([
            'data' => [
                'pipeline' => [
                    'name' => 'rerum',
                    'created_at' => '1997-09-17T01:58:07+00:00',
                    'updated_at' => '2003-12-26T13:44:54+00:00',
                ]
            ]
        ]);
    }

    public function deleteNonExistingPipeline(ApiTester $I): void
    {
        $I->wantTo('delete non-existing pipeline');
        $I->haveHttpHeader('Content-Type', 'application/json');
        $I->sendDELETE('/pipeline/0');
        $I->seeResponseCodeIs(HttpCode::NOT_FOUND);
        $I->seeResponseContainsJson([
            'data' => [
                'pipeline' => null
            ]
        ]);
    }
}
